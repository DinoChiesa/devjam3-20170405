<?xml version="1.0" encoding="UTF-8"?>
<ProxyEndpoint name="oauth2-ac">
  <Description>Proxy Endpoint to handle OAuth 2.0 Authorization Code flow</Description>
  <HTTPProxyConnection>
    <BasePath>/apigee-examples/oauth2-ac</BasePath>
    <VirtualHost>secure</VirtualHost>
  </HTTPProxyConnection>

  <FaultRules/>

  <PreFlow name="PreFlow">
    <Request>
      <Step>
        <Name>CORS-1</Name>
      </Step>
    </Request>
    <Response>
    </Response>
  </PreFlow>

  <PostFlow name="PostFlow">
    <Request/>
    <Response/>
  </PostFlow>

  <Flows>

    <Flow name="authorize_app">
      <!--

        The app uses this inbound request to kick off the flow.
        Example:

        GET "/apigee-examples/oauth2-ac/authorize?client_id=lq93FiqTw1si09wsocM7AjOBSbyi45iA&redirect_uri=http://dinochiesa.github.io/openid-connect/callback-handler.html&response_type=code&scope=A"

        The response is a 302 redirect to the login-and-consent app. The
        login-and-consent app is handled by a different proxy endpoint in
        this same proxy bundle.

      -->

      <Condition>(proxy.pathsuffix MatchesPath "/authorize") and (request.verb = "GET")</Condition>
      <Description/>
      <Request>
        <Step>
          <Name>OAuthV2-GetInfo</Name>
        </Step>
        <Step>
          <Name>AM-Authz-Session</Name>
        </Step>
        <Step>
          <Name>CP-Authz-Session</Name>
        </Step>
      </Request>
      <Response>
        <Step>
          <Name>AM-Redirect-To-Login-App</Name>
        </Step>
      </Response>
    </Flow>

    <Flow name="authorization code">
      <!--
          This request is sent by the login-and-consent app to generate
          an authorization code onn behalf of an authentic user. Example:

          POST /apigee-examples/oauth2-ac/authcode?sessionid=rrt-006f23e80e7ff6f73-c-ea-25068-1170519-1

            uuid=EA1BA8EB-0A83-46BE-8B05-4C2E827F25B3
            &motto=If%20this%20isn%27t%20nice%2C%20I%20don%27t%20know%20what%20is.
            &given_name=Dino
            &family_name=Chiesa
            &email=dino%40apigee.com
            &roles=read%2Cedit%2Cdelete
            &response_type=code

          -->
      <Condition>(proxy.pathsuffix MatchesPath "/authcode") and (request.verb = "POST")</Condition>
      <Description/>
      <Request>
        <Step>
          <Name>CL-Get-Authz-Session</Name>
        </Step>
        <Step>
          <Name>RF-Bad-Session</Name>
          <Condition>authtx = null</Condition>
        </Step>
        <Step>
          <Name>JS-Import-Json-To-Context</Name>
        </Step>
        <Step>
          <Name>OAuthV2-Generate-Authorization-Code</Name>
        </Step>
      </Request>
      <Response/>
    </Flow>


    <Flow name="token">
      <!--
          The app uses this request to exchange the code for a token,
          or to refresh a token.

          Example:

          Authorization: Basic base64(client_id:client_secret)
          POST /apigee-examples/oauth2-ac/token
            grant_type=authorization_code
            &code=q2oI7b2d
            &redirect_uri=http://dinochiesa.github.io/openid-connect/callback-handler.html

          -or-

          Authorization: Basic base64(client_id:client_secret)
          POST /apigee-examples/oauth2-ac/token
            grant_type=refresh_token&refresh_token=sksious93e93

          -->
      <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "POST")</Condition>
      <Description/>
      <Request>
        <Step>
          <Name>RF-Invalid-Grant-Type</Name>
          <Condition>NOT (request.formparam.grant_type = "authorization_code" OR request.formparam.grant_type = "refresh_token")</Condition>
        </Step>

      </Request>
      <Response>
        <Step>
          <Name>OAuthV2-Generate-Access-Token</Name>
          <Condition>request.formparam.grant_type = "authorization_code"</Condition>
        </Step>
        <Step>
          <Name>OAuthV2-Refresh-Access-Token</Name>
          <Condition>request.formparam.grant_type = "refresh_token"</Condition>
        </Step>
        <Step>
          <Name>JS-Groom-Token-Response</Name>
        </Step>
      </Response>
    </Flow>

    <Flow name='unknown request'>
      <Request>
        <Step>
          <Name>RF-Unknown-Request</Name>
        </Step>
      </Request>
      <Response/>
    </Flow>

  </Flows>

  <RouteRule name="NoRoute"/>

</ProxyEndpoint>
